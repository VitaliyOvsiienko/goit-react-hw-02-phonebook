{"ast":null,"code":"var _jsxFileName = \"/Users/vitalyovsiyenko/Desktop/React/goit-react-hw-02-phonebook/src/components/App.jsx\";\nimport { Component } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport { Frame, Container, Title, SubTitle } from \"./App.styled\";\nimport { ContactForm } from \"./ContactForm\";\nimport { ContactList } from \"./ContactList\";\nimport { Filter } from \"./Filter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      contacts: [{\n        id: 'id-1',\n        name: 'Rosie Simpson',\n        number: '459-12-56'\n      }, {\n        id: 'id-2',\n        name: 'Hermione Kline',\n        number: '443-89-12'\n      }, {\n        id: 'id-3',\n        name: 'Eden Clements',\n        number: '645-17-79'\n      }, {\n        id: 'id-4',\n        name: 'Annie Copeland',\n        number: '227-91-26'\n      }],\n      filter: ''\n    };\n\n    this.onSubmitHandler = newContact => {\n      const {\n        contacts\n      } = this.state;\n      const isDuplicateName = contacts.some(contact => contact.name.toLowerCase() === newContact.name.toLowerCase());\n\n      if (isDuplicateName) {\n        return alert(`${newContact.name} is already in contacts`);\n      }\n\n      const newContactId = nanoid();\n      const updatedContacts = [...contacts, { ...newContact,\n        id: newContactId\n      }];\n      this.setState({\n        contacts: updatedContacts\n      });\n    };\n\n    this.onDeleteHandler = id => {\n      this.setState(prev => ({\n        contacts: prev.contacts.filter(contact => contact.id !== id)\n      }));\n    };\n\n    this.onFilterContacts = event => {\n      const filterValue = event.target.value;\n      this.setState({\n        filter: filterValue\n      });\n    };\n  }\n\n  render() {\n    const {\n      filter\n    } = this.state;\n    const filteredContacts = this.state.contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Frame, {\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          children: \"Phonebook\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n          onSubmit: this.onSubmitHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SubTitle, {\n          children: \"Contacts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Filter, {\n          value: filter,\n          onChange: this.onFilterContacts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ContactList, {\n          contacts: filteredContacts,\n          onDeleteContact: this.onDeleteHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n;","map":{"version":3,"sources":["/Users/vitalyovsiyenko/Desktop/React/goit-react-hw-02-phonebook/src/components/App.jsx"],"names":["Component","nanoid","Frame","Container","Title","SubTitle","ContactForm","ContactList","Filter","App","state","contacts","id","name","number","filter","onSubmitHandler","newContact","isDuplicateName","some","contact","toLowerCase","alert","newContactId","updatedContacts","setState","onDeleteHandler","prev","onFilterContacts","event","filterValue","target","value","render","filteredContacts","includes"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport { Frame, Container, Title, SubTitle } from \"./App.styled\";\nimport { ContactForm } from \"./ContactForm\";\nimport { ContactList } from \"./ContactList\";\nimport { Filter } from \"./Filter\";\n\n\nexport class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  onSubmitHandler = (newContact) => {\n    const { contacts } = this.state;\n\n    const isDuplicateName = contacts.some(contact => contact.name.toLowerCase() === newContact.name.toLowerCase());\n\n    if (isDuplicateName) {\n      return alert(`${newContact.name} is already in contacts`);\n    }\n\n    const newContactId = nanoid();\n\n    const updatedContacts = [...contacts, { ...newContact, id: newContactId }];\n    this.setState({\n      contacts: updatedContacts\n    });\n  };\n\n  onDeleteHandler = (id) => {\n    this.setState((prev) => ({\n      contacts: prev.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n\n  onFilterContacts = (event) => {\n    const filterValue = event.target.value;\n    this.setState({ filter: filterValue });\n  };\n\n  render() {\n    const { filter } = this.state;\n    const filteredContacts = this.state.contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n\n    return (\n      <Container>\n        <Frame>\n          <Title>Phonebook</Title>\n          <ContactForm onSubmit={this.onSubmitHandler} />\n\n          <SubTitle>Contacts</SubTitle>\n          <Filter value={filter} onChange={this.onFilterContacts} />\n          <ContactList contacts={filteredContacts} onDeleteContact={this.onDeleteHandler} />\n        </Frame>\n      </Container>\n    );\n  }\n};"]},"metadata":{},"sourceType":"module"}