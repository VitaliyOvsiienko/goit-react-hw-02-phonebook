{"ast":null,"code":"var _jsxFileName = \"/Users/vitalyovsiyenko/Desktop/React/goit-react-hw-02-phonebook/src/components/contactList/ContactList.jsx\";\nimport PropTypes from 'prop-types';\nimport { ContactItem } from 'components/contactItem/contactItem';\nimport { List } from './ContactList.styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ContactList = _ref => {\n  let {\n    contacts,\n    onDeleteContact\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(List, {\n    children: contacts.map(_ref2 => {\n      let {\n        id,\n        name,\n        number\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(ContactItem, {\n        name: name,\n        number: number,\n        onDeleteContact: () => onDeleteContact(id)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n_c = ContactList;\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired\n  })),\n  onDeleteContact: PropTypes.func.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactList\");","map":{"version":3,"sources":["/Users/vitalyovsiyenko/Desktop/React/goit-react-hw-02-phonebook/src/components/contactList/ContactList.jsx"],"names":["PropTypes","ContactItem","List","ContactList","contacts","onDeleteContact","map","id","name","number","propTypes","arrayOf","shape","string","isRequired","func"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,oCAA5B;AACA,SAASC,IAAT,QAAqB,sBAArB;;AAEA,OAAO,MAAMC,WAAW,GAAG,QAAmC;AAAA,MAAlC;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAkC;AAC1D,sBACI,QAAC,IAAD;AAAA,cACKD,QAAQ,CAACE,GAAT,CAAa;AAAA,UAAC;AAAEC,QAAAA,EAAF;AAAMC,QAAAA,IAAN;AAAYC,QAAAA;AAAZ,OAAD;AAAA,0BACV,QAAC,WAAD;AAEI,QAAA,IAAI,EAAED,IAFV;AAGI,QAAA,MAAM,EAAEC,MAHZ;AAII,QAAA,eAAe,EAAE,MAAMJ,eAAe,CAACE,EAAD;AAJ1C,SACSA,EADT;AAAA;AAAA;AAAA;AAAA,cADU;AAAA,KAAb;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CAdM;KAAMJ,W;AAgBbA,WAAW,CAACO,SAAZ,GAAwB;AACpBN,EAAAA,QAAQ,EAAEJ,SAAS,CAACW,OAAV,CAAkBX,SAAS,CAACY,KAAV,CAAgB;AACxCL,IAAAA,EAAE,EAAEP,SAAS,CAACa,MAAV,CAAiBC,UADmB;AAExCN,IAAAA,IAAI,EAAER,SAAS,CAACa,MAAV,CAAiBC,UAFiB;AAGxCL,IAAAA,MAAM,EAAET,SAAS,CAACa,MAAV,CAAiBC;AAHe,GAAhB,CAAlB,CADU;AAMpBT,EAAAA,eAAe,EAAEL,SAAS,CAACe,IAAV,CAAeD;AANZ,CAAxB","sourcesContent":["import PropTypes from 'prop-types';\nimport { ContactItem } from 'components/contactItem/contactItem';\nimport { List } from './ContactList.styled';\n\nexport const ContactList = ({ contacts, onDeleteContact }) => {\n    return (\n        <List>\n            {contacts.map(({ id, name, number }) => (\n                <ContactItem\n                    key={id}\n                    name={name}\n                    number={number}\n                    onDeleteContact={() => onDeleteContact(id)}\n                >\n                </ContactItem>\n            ))}\n        </List>\n    );\n};\n\nContactList.propTypes = {\n    contacts: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n    })),\n    onDeleteContact: PropTypes.func.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}