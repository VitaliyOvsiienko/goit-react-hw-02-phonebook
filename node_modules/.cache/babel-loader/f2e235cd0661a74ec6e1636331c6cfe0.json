{"ast":null,"code":"var _jsxFileName = \"/Users/vitalyovsiyenko/Desktop/React/goit-react-hw-02-phonebook/src/components/App.jsx\";\nimport { Component } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport { Frame, Container, Title, SubTitle } from \"./App.styled\";\nimport { ContactForm } from \"./ContactForm\";\nimport { ContactList } from \"./ContactList\";\nimport { Filter } from \"./Filter\";\nimport defaultContacts from '../data/contacts.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      contacts: defaultContacts,\n      filter: ''\n    };\n\n    this.onSubmitHandler = newContact => {\n      const {\n        contacts\n      } = this.state;\n      const isDuplicateName = contacts.some(contact => contact.name.toLowerCase() === newContact.name.toLowerCase());\n\n      if (isDuplicateName) {\n        return alert(`${newContact.name} is already in contacts`);\n      }\n\n      const newContactId = nanoid();\n      const updatedContacts = [...contacts, { ...newContact,\n        id: newContactId\n      }];\n      this.setState({\n        contacts: updatedContacts\n      });\n    };\n\n    this.onDeleteHandler = id => {\n      this.setState(prev => ({\n        contacts: prev.contacts.filter(contact => contact.id !== id)\n      }));\n    };\n\n    this.onFilterContacts = event => {\n      const filterValue = event.target.value;\n      this.setState({\n        filter: filterValue\n      });\n    };\n  }\n\n  render() {\n    const {\n      filter\n    } = this.state;\n    const filteredContacts = this.state.contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Frame, {\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          children: \"Phonebook\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n          onSubmit: this.onSubmitHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SubTitle, {\n          children: \"Contacts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Filter, {\n          value: filter,\n          onChange: this.onFilterContacts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ContactList, {\n          contacts: filteredContacts,\n          onDeleteContact: this.onDeleteHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n;","map":{"version":3,"sources":["/Users/vitalyovsiyenko/Desktop/React/goit-react-hw-02-phonebook/src/components/App.jsx"],"names":["Component","nanoid","Frame","Container","Title","SubTitle","ContactForm","ContactList","Filter","defaultContacts","App","state","contacts","filter","onSubmitHandler","newContact","isDuplicateName","some","contact","name","toLowerCase","alert","newContactId","updatedContacts","id","setState","onDeleteHandler","prev","onFilterContacts","event","filterValue","target","value","render","filteredContacts","includes"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,KAAT,EAAgBC,SAAhB,EAA2BC,KAA3B,EAAkCC,QAAlC,QAAkD,cAAlD;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,OAAOC,eAAP,MAA4B,uBAA5B;;AAGA,OAAO,MAAMC,GAAN,SAAkBV,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACjCW,KADiC,GACzB;AACNC,MAAAA,QAAQ,EAAEH,eADJ;AAENI,MAAAA,MAAM,EAAE;AAFF,KADyB;;AAAA,SAMjCC,eANiC,GAMdC,UAAD,IAAgB;AAChC,YAAM;AAAEH,QAAAA;AAAF,UAAe,KAAKD,KAA1B;AAEA,YAAMK,eAAe,GAAGJ,QAAQ,CAACK,IAAT,CAAcC,OAAO,IAAIA,OAAO,CAACC,IAAR,CAAaC,WAAb,OAA+BL,UAAU,CAACI,IAAX,CAAgBC,WAAhB,EAAxD,CAAxB;;AAEA,UAAIJ,eAAJ,EAAqB;AACnB,eAAOK,KAAK,CAAE,GAAEN,UAAU,CAACI,IAAK,yBAApB,CAAZ;AACD;;AAED,YAAMG,YAAY,GAAGrB,MAAM,EAA3B;AAEA,YAAMsB,eAAe,GAAG,CAAC,GAAGX,QAAJ,EAAc,EAAE,GAAGG,UAAL;AAAiBS,QAAAA,EAAE,EAAEF;AAArB,OAAd,CAAxB;AACA,WAAKG,QAAL,CAAc;AACZb,QAAAA,QAAQ,EAAEW;AADE,OAAd;AAGD,KArBgC;;AAAA,SAuBjCG,eAvBiC,GAuBdF,EAAD,IAAQ;AACxB,WAAKC,QAAL,CAAeE,IAAD,KAAW;AACvBf,QAAAA,QAAQ,EAAEe,IAAI,CAACf,QAAL,CAAcC,MAAd,CAAqBK,OAAO,IAAIA,OAAO,CAACM,EAAR,KAAeA,EAA/C;AADa,OAAX,CAAd;AAGD,KA3BgC;;AAAA,SA8BjCI,gBA9BiC,GA8BbC,KAAD,IAAW;AAC5B,YAAMC,WAAW,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAjC;AACA,WAAKP,QAAL,CAAc;AAAEZ,QAAAA,MAAM,EAAEiB;AAAV,OAAd;AACD,KAjCgC;AAAA;;AAmCjCG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEpB,MAAAA;AAAF,QAAa,KAAKF,KAAxB;AACA,UAAMuB,gBAAgB,GAAG,KAAKvB,KAAL,CAAWC,QAAX,CAAoBC,MAApB,CAA4BK,OAAD,IAClDA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2Be,QAA3B,CAAoCtB,MAAM,CAACO,WAAP,EAApC,CADuB,CAAzB;AAIA,wBACE,QAAC,SAAD;AAAA,6BACE,QAAC,KAAD;AAAA,gCACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,WAAD;AAAa,UAAA,QAAQ,EAAE,KAAKN;AAA5B;AAAA;AAAA;AAAA;AAAA,gBAFF,eAIE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE,QAAC,MAAD;AACE,UAAA,KAAK,EAAED,MADT;AAEE,UAAA,QAAQ,EAAE,KAAKe;AAFjB;AAAA;AAAA;AAAA;AAAA,gBALF,eAUE,QAAC,WAAD;AAAa,UAAA,QAAQ,EAAEM,gBAAvB;AAAyC,UAAA,eAAe,EAAE,KAAKR;AAA/D;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAgBD;;AAzDgC;AA0DlC","sourcesContent":["import { Component } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport { Frame, Container, Title, SubTitle } from \"./App.styled\";\nimport { ContactForm } from \"./ContactForm\";\nimport { ContactList } from \"./ContactList\";\nimport { Filter } from \"./Filter\";\nimport defaultContacts from '../data/contacts.json'\n\n\nexport class App extends Component {\n  state = {\n    contacts: defaultContacts,\n    filter: '',\n  };\n\n  onSubmitHandler = (newContact) => {\n    const { contacts } = this.state;\n\n    const isDuplicateName = contacts.some(contact => contact.name.toLowerCase() === newContact.name.toLowerCase());\n\n    if (isDuplicateName) {\n      return alert(`${newContact.name} is already in contacts`);\n    }\n\n    const newContactId = nanoid();\n\n    const updatedContacts = [...contacts, { ...newContact, id: newContactId }];\n    this.setState({\n      contacts: updatedContacts\n    });\n  };\n\n  onDeleteHandler = (id) => {\n    this.setState((prev) => ({\n      contacts: prev.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n\n  onFilterContacts = (event) => {\n    const filterValue = event.target.value;\n    this.setState({ filter: filterValue });\n  };\n\n  render() {\n    const { filter } = this.state;\n    const filteredContacts = this.state.contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n\n    return (\n      <Container>\n        <Frame>\n          <Title>Phonebook</Title>\n          <ContactForm onSubmit={this.onSubmitHandler} />\n\n          <SubTitle>Contacts</SubTitle>\n          <Filter\n            value={filter}\n            onChange={this.onFilterContacts}\n            \n          />\n          <ContactList contacts={filteredContacts} onDeleteContact={this.onDeleteHandler} />\n        </Frame>\n      </Container>\n    );\n  }\n};\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}