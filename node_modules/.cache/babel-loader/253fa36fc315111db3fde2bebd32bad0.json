{"ast":null,"code":"// import { Component } from \"react\";\n// import { nanoid } from \"nanoid\";\n// import { Frame, Container, Title, SubTitle } from \"./App.styled\";\n// import { ContactForm } from \"./ContactForm\";\n// import { ContactList } from \"./ContactList\";\n// import { Filter } from \"./Filter/Filter\";\n// import { defaultContacts } from '../Data/contacts.json';\n// export class App extends Component {\n//   state = {\n//     contacts: defaultContacts,\n//     filter: '',\n//   };\n//   onSubmitHandler = (newContact) => {\n//     const { contacts } = this.state;\n//     const isDuplicateName = contacts.some(contact => contact.name.toLowerCase() === newContact.name.toLowerCase());\n//     if (isDuplicateName) {\n//       return alert(`${newContact.name} is already in contacts`);\n//     }\n//     const newContactId = nanoid();\n//     const updatedContacts = [...contacts, { ...newContact, id: newContactId }];\n//     this.setState({\n//       contacts: updatedContacts\n//     });\n//   };\n//   onDeleteHandler = (id) => {\n//     this.setState((prev) => ({\n//       contacts: prev.contacts.filter(contact => contact.id !== id),\n//     }));\n//   };\n//   onFilterContacts = (event) => {\n//     const filterValue = event.target.value;\n//     this.setState({ filter: filterValue });\n//   };\n//   render() {\n//     const { filter } = this.state;\n//     const filteredContacts = this.state.contacts.filter((contact) =>\n//       contact.name.toLowerCase().includes(filter.toLowerCase())\n//     );\n//     return (\n//       <Container>\n//         <Frame>\n//           <Title>Phonebook</Title>\n//           <ContactForm onSubmit={this.onSubmitHandler} />\n//           <SubTitle>Contacts</SubTitle>\n//           <Filter value={filter} onChange={this.onFilterContacts} />\n//           <ContactList contacts={filteredContacts} onDeleteContact={this.onDeleteHandler} />\n//         </Frame>\n//       </Container>\n//     );\n//   }\n// };","map":{"version":3,"sources":["/Users/vitalyovsiyenko/Desktop/React/goit-react-hw-02-phonebook/src/components/App.jsx"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import { Component } from \"react\";\n// import { nanoid } from \"nanoid\";\n// import { Frame, Container, Title, SubTitle } from \"./App.styled\";\n// import { ContactForm } from \"./ContactForm\";\n// import { ContactList } from \"./ContactList\";\n// import { Filter } from \"./Filter/Filter\";\n// import { defaultContacts } from '../Data/contacts.json';\n\n\n// export class App extends Component {\n//   state = {\n//     contacts: defaultContacts,\n//     filter: '',\n//   };\n\n//   onSubmitHandler = (newContact) => {\n//     const { contacts } = this.state;\n\n//     const isDuplicateName = contacts.some(contact => contact.name.toLowerCase() === newContact.name.toLowerCase());\n\n//     if (isDuplicateName) {\n//       return alert(`${newContact.name} is already in contacts`);\n//     }\n\n//     const newContactId = nanoid();\n\n//     const updatedContacts = [...contacts, { ...newContact, id: newContactId }];\n//     this.setState({\n//       contacts: updatedContacts\n//     });\n//   };\n\n//   onDeleteHandler = (id) => {\n//     this.setState((prev) => ({\n//       contacts: prev.contacts.filter(contact => contact.id !== id),\n//     }));\n//   };\n\n\n//   onFilterContacts = (event) => {\n//     const filterValue = event.target.value;\n//     this.setState({ filter: filterValue });\n//   };\n\n//   render() {\n//     const { filter } = this.state;\n//     const filteredContacts = this.state.contacts.filter((contact) =>\n//       contact.name.toLowerCase().includes(filter.toLowerCase())\n//     );\n\n//     return (\n//       <Container>\n//         <Frame>\n//           <Title>Phonebook</Title>\n//           <ContactForm onSubmit={this.onSubmitHandler} />\n\n//           <SubTitle>Contacts</SubTitle>\n//           <Filter value={filter} onChange={this.onFilterContacts} />\n//           <ContactList contacts={filteredContacts} onDeleteContact={this.onDeleteHandler} />\n//         </Frame>\n//       </Container>\n//     );\n//   }\n// };"]},"metadata":{},"sourceType":"module"}