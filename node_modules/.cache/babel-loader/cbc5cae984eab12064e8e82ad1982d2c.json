{"ast":null,"code":"var _jsxFileName = \"/Users/vitalyovsiyenko/Desktop/React/goit-react-hw-02-phonebook/src/components/contactForm/ContactForm.jsx\";\nimport { Component } from \"react\";\nimport PropTypes from 'prop-types';\nimport { Form, Label, Input, Button } from \"./ContactForm.styled\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ContactForm extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      name: '',\n      number: ''\n    };\n\n    this.handleChange = e => {\n      const {\n        name,\n        value\n      } = e.currentTarget;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.onSubmit({ ...this.state\n      });\n      this.reset();\n    };\n\n    this.reset = () => {\n      this.setState({\n        name: '',\n        number: ''\n      });\n    };\n  }\n\n  render() {\n    const {\n      name,\n      number\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        htmlFor: \"name\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        name: \"name\",\n        value: name,\n        onChange: this.handleChange,\n        placeholder: \"Enter name\",\n        pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n        title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Label, {\n        htmlFor: \"number\",\n        children: \"Number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"tel\",\n        name: \"number\",\n        value: number,\n        onChange: this.handleChange,\n        placeholder: \"Enter number\",\n        pattern: \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n        title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Add contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n;\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/Users/vitalyovsiyenko/Desktop/React/goit-react-hw-02-phonebook/src/components/contactForm/ContactForm.jsx"],"names":["Component","PropTypes","Form","Label","Input","Button","ContactForm","state","name","number","handleChange","e","value","currentTarget","setState","handleSubmit","preventDefault","props","onSubmit","reset","render","propTypes","func","isRequired"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,KAAtB,EAA6BC,MAA7B,QAA4C,sBAA5C;;AAGA,OAAO,MAAMC,WAAN,SAA0BN,SAA1B,CAAoC;AAAA;AAAA;AAAA,SACvCO,KADuC,GAC/B;AACJC,MAAAA,IAAI,EAAE,EADF;AAEJC,MAAAA,MAAM,EAAE;AAFJ,KAD+B;;AAAA,SAMvCC,YANuC,GAMvBC,CAAD,IAAO;AACtB,YAAM;AAAEH,QAAAA,IAAF;AAAQI,QAAAA;AAAR,UAAkBD,CAAC,CAACE,aAA1B;AACA,WAAKC,QAAL,CAAc;AAAE,SAACN,IAAD,GAAQI;AAAV,OAAd;AACC,KATsC;;AAAA,SAWvCG,YAXuC,GAWvBJ,CAAD,IAAO;AAClBA,MAAAA,CAAC,CAACK,cAAF;AACA,WAAKC,KAAL,CAAWC,QAAX,CAAoB,EAAE,GAAG,KAAKX;AAAV,OAApB;AACA,WAAKY,KAAL;AACH,KAfsC;;AAAA,SAiBvCA,KAjBuC,GAiB/B,MAAM;AACV,WAAKL,QAAL,CAAc;AAAEN,QAAAA,IAAI,EAAE,EAAR;AAAYC,QAAAA,MAAM,EAAE;AAApB,OAAd;AACH,KAnBsC;AAAA;;AAqBvCW,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEZ,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAmB,KAAKF,KAA9B;AAEA,wBACQ,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKQ,YAArB;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,KAAD;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,IAAI,EAAC,MAFT;AAGI,QAAA,KAAK,EAAEP,IAHX;AAII,QAAA,QAAQ,EAAE,KAAKE,YAJnB;AAKI,QAAA,WAAW,EAAC,YALhB;AAMI,QAAA,OAAO,EAAC,wHANZ;AAOI,QAAA,KAAK,EAAC,wIAPV;AAQI,QAAA,QAAQ;AARZ;AAAA;AAAA;AAAA;AAAA,cAFJ,eAYI,QAAC,KAAD;AAAO,QAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZJ,eAaI,QAAC,KAAD;AACI,QAAA,IAAI,EAAC,KADT;AAEI,QAAA,IAAI,EAAC,QAFT;AAGI,QAAA,KAAK,EAAED,MAHX;AAII,QAAA,QAAQ,EAAE,KAAKC,YAJnB;AAKI,QAAA,WAAW,EAAC,cALhB;AAMI,QAAA,OAAO,EAAC,wFANZ;AAOI,QAAA,KAAK,EAAC,8FAPV;AAQI,QAAA,QAAQ;AARZ;AAAA;AAAA;AAAA;AAAA,cAbJ,eAuBI,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAvBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADR;AA2BH;;AAnDsC;AAoD1C;AAEDJ,WAAW,CAACe,SAAZ,GAAwB;AACpBH,EAAAA,QAAQ,EAAEjB,SAAS,CAACqB,IAAV,CAAeC;AADL,CAAxB","sourcesContent":["import { Component } from \"react\";\nimport PropTypes from 'prop-types'\nimport { Form, Label, Input, Button, } from \"./ContactForm.styled\";\n\n\nexport class ContactForm extends Component {\n    state = {\n        name: '',\n        number: ''\n    }\n\n    handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n    };\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.onSubmit({ ...this.state });\n        this.reset();\n    };\n\n    reset = () => {\n        this.setState({ name: '', number: '' });\n    };\n\n    render() {\n        const { name, number } = this.state;\n\n        return (\n                <Form onSubmit={this.handleSubmit}>\n                    <Label htmlFor='name'>Name</Label>\n                    <Input\n                        type=\"text\"\n                        name=\"name\"\n                        value={name}\n                        onChange={this.handleChange}\n                        placeholder='Enter name'\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                        required\n                    />\n                    <Label htmlFor='number'>Number</Label>\n                    <Input\n                        type=\"tel\"\n                        name=\"number\"\n                        value={number}\n                        onChange={this.handleChange}\n                        placeholder='Enter number'\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                        required\n                    />\n                    <Button type=\"submit\">Add contact</Button>\n                </Form>\n        );\n    }\n};\n\nContactForm.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n};"]},"metadata":{},"sourceType":"module"}